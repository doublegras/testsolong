# Compiler and flags
CC = gcc
PRINTF_DIR = ./ft_printf
PRINTF = $(PRINTF_DIR)/libftprintf.a
SRC_DIR = src/
OBJ_DIR = obj/
CFLAGS = -I/usr/include -Imlx_linux -O3
LDFLAGS = -Lft_printf -lftprintf -Lmlx_linux -lmlx_Linux -L/usr/lib -lXext -lX11 -lm -lz -fsanitize=address
NAME = so_long

SRC_FILES = main

SRC = $(addprefix $(SRC_DIR), $(addsuffix .c, $(SRC_FILES)))
OBJ = $(addprefix $(OBJ_DIR), $(addsuffix .o, $(SRC_FILES)))

# Default target
all: $(NAME)

# Linking the final executable
$(NAME): $(PRINTF) $(OBJ)
	$(CC) $(OBJ) $(LDFLAGS) -o $(NAME)

$(PRINTF):
	make -C $(PRINTF_DIR) all

# Rule for creating object files
$(OBJ_DIR)%.o: $(SRC_DIR)%.c
	mkdir -p $(OBJ_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Cleaning up object files
clean:
	make -C $(PRINTF_DIR) clean
	rm -rf $(OBJ_DIR)

# Cleaning everything, including the executable
fclean: clean
	make -C $(PRINTF_DIR) fclean
	rm -f $(NAME)

# Rebuilding everything from scratch
re: fclean all
